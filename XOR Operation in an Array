You are given an integer n and an integer start.
Define an array nums where nums[i] = start + 2 * i (0-indexed) and n == nums.length.
Return the bitwise XOR of all elements of nums.


Example 1:
Input: n = 5, start = 0
Output: 8
Explanation: Array nums is equal to [0, 2, 4, 6, 8] where (0 ^ 2 ^ 4 ^ 6 ^ 8) = 8.
Where "^" corresponds to bitwise XOR operator.

Approach:-
1. Initilaize vector array named as nums.
2. Initialize integer variable named as r=0.
3. Run a for loop from i=0 to i<n.
4. Calculate value of c by a formula start+(2*i).Store the value of c in nums array.
5. Calculate the bitwise XOR of all elements of nums in r.
6. Return r as a result.

Solution in C++
class Solution {
public:
    int xorOperation(int n, int start) {
        vector<int>nums;
        int r=0;
        for(int i=0;i<n;i++)
        {
            int c=start+(2*i);
            nums.push_back(c);
        }
        for(int i=0;i<nums.size();i++)
        {
            r^=nums[i];
        }
        return r;
    }
};

Complexity
Time complexity:0 ms
Space complexity:6.39 MB
